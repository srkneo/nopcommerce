//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace NopSolutions.NopCommerce.BusinessLogic.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class NopEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new NopEntities object using the connection string found in the 'NopEntities' section of the application configuration file.
        /// </summary>
        public NopEntities() : base("name=NopEntities", "NopEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NopEntities object.
        /// </summary>
        public NopEntities(string connectionString) : base(connectionString, "NopEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NopEntities object.
        /// </summary>
        public NopEntities(EntityConnection connection) : base(connection, "NopEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Language> Nop_Language
        {
            get
            {
                if ((_Nop_Language == null))
                {
                    _Nop_Language = base.CreateObjectSet<Language>("Nop_Language");
                }
                return _Nop_Language;
            }
        }
        private ObjectSet<Language> _Nop_Language;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Nop_Language EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNop_Language(Language language)
        {
            base.AddObject("Nop_Language", language);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NopSolutions.NopCommerce.BusinessLogic.Data", Name="Language")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Language : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Language object.
        /// </summary>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="languageCulture">Initial value of the LanguageCulture property.</param>
        /// <param name="flagImageFileName">Initial value of the FlagImageFileName property.</param>
        /// <param name="published">Initial value of the Published property.</param>
        /// <param name="displayOrder">Initial value of the DisplayOrder property.</param>
        public static Language CreateLanguage(global::System.Int32 languageId, global::System.String name, global::System.String languageCulture, global::System.String flagImageFileName, global::System.Boolean published, global::System.Int32 displayOrder)
        {
            Language language = new Language();
            language.LanguageId = languageId;
            language.Name = name;
            language.LanguageCulture = languageCulture;
            language.FlagImageFileName = flagImageFileName;
            language.Published = published;
            language.DisplayOrder = displayOrder;
            return language;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                if (_LanguageId != value)
                {
                    OnLanguageIdChanging(value);
                    ReportPropertyChanging("LanguageId");
                    _LanguageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LanguageId");
                    OnLanguageIdChanged();
                }
            }
        }
        private global::System.Int32 _LanguageId;
        partial void OnLanguageIdChanging(global::System.Int32 value);
        partial void OnLanguageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LanguageCulture
        {
            get
            {
                return _LanguageCulture;
            }
            set
            {
                OnLanguageCultureChanging(value);
                ReportPropertyChanging("LanguageCulture");
                _LanguageCulture = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LanguageCulture");
                OnLanguageCultureChanged();
            }
        }
        private global::System.String _LanguageCulture;
        partial void OnLanguageCultureChanging(global::System.String value);
        partial void OnLanguageCultureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FlagImageFileName
        {
            get
            {
                return _FlagImageFileName;
            }
            set
            {
                OnFlagImageFileNameChanging(value);
                ReportPropertyChanging("FlagImageFileName");
                _FlagImageFileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FlagImageFileName");
                OnFlagImageFileNameChanged();
            }
        }
        private global::System.String _FlagImageFileName;
        partial void OnFlagImageFileNameChanging(global::System.String value);
        partial void OnFlagImageFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Published
        {
            get
            {
                return _Published;
            }
            set
            {
                OnPublishedChanging(value);
                ReportPropertyChanging("Published");
                _Published = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Published");
                OnPublishedChanged();
            }
        }
        private global::System.Boolean _Published;
        partial void OnPublishedChanging(global::System.Boolean value);
        partial void OnPublishedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisplayOrder
        {
            get
            {
                return _DisplayOrder;
            }
            set
            {
                OnDisplayOrderChanging(value);
                ReportPropertyChanging("DisplayOrder");
                _DisplayOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayOrder");
                OnDisplayOrderChanged();
            }
        }
        private global::System.Int32 _DisplayOrder;
        partial void OnDisplayOrderChanging(global::System.Int32 value);
        partial void OnDisplayOrderChanged();

        #endregion
    
    }

    #endregion
    
}
